# version: '3.0'
services:

  web0:
    image: testing
    command: python manage.py runserver 0.0.0.0:8080
    build:
      context: .
    restart: always
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - app-web-net

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - app-web-net

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    env_file:
      - ./.env
    networks:
      - app-web-net
  # celery: 
  #   image: modrek
  #   command: watchdemo auto-restart --directory=. --pattern=*.py --recursive -- celery -A project worker --loglevel=info
  #   build:
  #     context: .
  #   env_file:
  #     - ./.env
  #   restart: always
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db


  redis:
    image: redis:alpine
    expose: 
      - 6379
    ports:
      - "6379:6379"
    networks:
      - app-web-net
    volumes:
      - .:/app


  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/local/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web0
    networks:
      - app-web-net

  elasticsearch:
    image: elasticsearch:7.17.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  esdata:


networks:
  app-web-net: 
    driver: bridge